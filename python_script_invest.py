# coding=UTF-8
# -----------------------------------------------
# Generated by InVEST 3.9.0 on Thu Jan 21 16:58:32 2021
# Model: Sediment Delivery Ratio Model (SDR)

from shapely import speedups

speedups.disable()

import logging
import sys
import ScriptInputInvest
import natcap.invest.sdr.sdr
import natcap.invest.utils

LOGGER = logging.getLogger(__name__)
root_logger = logging.getLogger()

handler = logging.StreamHandler(sys.stdout)
formatter = logging.Formatter(
    fmt=natcap.invest.utils.LOG_FMT,
    datefmt='%m/%d/%Y %H:%M:%S ')
handler.setFormatter(formatter)
logging.basicConfig(level=logging.INFO, handlers=[handler])
'''args = {
                'biophysical_table_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(
                    x) + '/biophysical_table_ws_' + str(x) + '.csv '
                ,
                'dem_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/dgm_ws_' + str(x) + '.tif',
                'drainage_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/gew_' + str(x) + '.tif',
                'erodibility_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/k_ws_' + str(
                    x) + '.tif',
                'erosivity_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/r_ws_' + str(
                    x) + '.tif',
                'ic_0_param': '0.5',
                'k_param': '2',
                'lulc_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/lc_ws_' + str(x) + '.tif',
                'results_suffix': '',
                'sdr_max': '0.8',
                'l_max': '122',
                'threshold_flow_accumulation': '10000',
                'watersheds_path': MainFolderPath + '/Input Data for InVEST/ws_id_' + str(x) + '/watershed_' + str(
                    x) + '.shp',
                'workspace_dir': MainFolderPath + '/Output InVEST/ws_' + str(x) + '/Output_ws_' + str(x)
                ,
            }'''


def getFileInputPaths(x):
    # Change to Individual file paths
    MainFolderPath = "D:/Users/Thakur/Desktop/EROSPOT_INVEST/OneDrive_2022-05-25/example data InVEST SDR/Input_ws_" + str(
        x)


if __name__ == '__main__':

    # Please change your file paths here
    MainFolderPath = "D:/Users/Thakur/ErospotWorkspace/InputDataInvest/testing"
    MainFolderPathInput = "D:/Users/Thakur/Desktop/EROSPOT_INVEST/OneDrive_2022-05-25/example data InVEST SDR/Input " \
                          "Data for InVEST "
    MainFolderPathOutput = "D:/Users/Thakur/ErospotWorkspace/OutputDataInvest"
    # D:\Users\Thakur\Desktop\EROSPOT_INVEST\OneDrive_2022-05-25\example data InVEST SDR\Input Data for InVEST
    # Asking the user to choose either to run a range of watersheds or a randomized list
    choice = input("Please select 1 if you want  to run invest for a serial range of "
                   "watersheds and select 2 if you want to run individual watersheds and press enter:")

    # Code Block: Choosing the range of watersheds and executing invest in a loop for this range
    if choice == '1':
        lower_limit = input('Please type the starting watershed of the range and press enter:')
        upper_limit = input(
            'Please type the ending watershed of the range upto which you want the calculation to run and press enter:')
        for x in range(int(lower_limit), int(upper_limit) + 1):
            # ScriptInputInvest.main(x) DOES NOT WORK
            args = {
                'biophysical_table_path': MainFolderPath + '/ws_' + str(
                    x) + '/biophysical_table_ws_' + str(x) + '.csv '
                ,
                'dem_path': MainFolderPath + '/ws_'+str(x)+'/DGM_ws_' + str(x) + '/dgm_ws_' + str(x) + '.tif',
                'drainage_path': MainFolderPath + '/ws_' + str(x) + '/gew_' + str(x) + '.tif',
                'erodibility_path': MainFolderPath + '/ws_' + str(x) + '/k_factor/k_ws_' + str(
                    x) + '.tif',
                'erosivity_path': MainFolderPath + '/ws_' + str(x) + '/r_factor/r_ws_times' + str(
                    x) + '.tif',
                'ic_0_param': '0.5',
                'k_param': '2',
                'lulc_path': MainFolderPath + '/ws_' + str(x) + '/lc_ws_' + str(x) + '.tif',
                'results_suffix': '',
                'sdr_max': '0.8',
                'l_max': '122',
                'threshold_flow_accumulation': '10000',
                'watersheds_path': MainFolderPath + '/ws_' + str(x) + '/ws_shape_' + str(
                    x) + '.shp',
                'workspace_dir': MainFolderPathOutput + '/ws_' + str(x)
                ,
            }
            # If there is something wrong with the data inputs of a
            # particular watershed, then an error message is displayed and the next watershed in the loop is executed
            #try:
            natcap.invest.sdr.sdr.execute(args)
            '''except:
                print(
                    'WATERSHED NUMBER ' + str(x) + ' FAILED EXECUTION: PLEASE CHECK ERROR DESCRIPTION. RESUMING WITH '
                                                   'THE '
                                                   'NEXT WATERSHED.....')
                print('\n\n')
                continue'''

    # Code Block: Taking a list of random watershed numbers from the user and running invest only for these watersheds
    if choice == '2':
        # For list of integers
        user_input = []
        user_input = [int(item) for item in input("Enter the watershed numbers with a space between them and press "
                                                  "enter : ").split()]
        for x in user_input:
            args = {
                'biophysical_table_path': MainFolderPathInput + '/ws_' + str(
                    x) + '/biophysical_table_ws_' + str(x) + '.csv '
                ,
                'dem_path': MainFolderPathInput + '/ws_id_' + str(x) + '/dgm_ws_' + str(x) + '.tif',
                'drainage_path': MainFolderPathInput + '/ws_id_' + str(x) + '/gew_' + str(x) + '.tif',
                'erodibility_path': MainFolderPathInput + '/ws_id_' + str(x) + '/k_ws_' + str(
                    x) + '.tif',
                'erosivity_path': MainFolderPathInput + '/ws_id_' + str(x) + '/r_ws_' + str(
                    x) + '.tif',
                'ic_0_param': '0.5',
                'k_param': '2',
                'lulc_path': MainFolderPathInput + '/ws_id_' + str(x) + '/lc_ws_' + str(x) + '.tif',
                'results_suffix': '',
                'sdr_max': '0.8',
                'l_max': '122',
                'threshold_flow_accumulation': '10000',
                'watersheds_path': MainFolderPathInput + '/ws_id_' + str(x) + '/watershed_' + str(
                    x) + '.shp',
                'workspace_dir': MainFolderPathOutput + '/ws_' + str(x) + '/Output_ws_' + str(x)
                ,
            }
            # If there is something wrong with the data inputs of a
            # particular watershed, then an error message is displayed and the next watershed in the loop is executed
            try:
                natcap.invest.sdr.sdr.execute(args)
            except:
                print(
                    'WATERSHED NUMBER ' + str(x) + ' FAILED EXECUTION: PLEASE CHECK ERROR DESCRIPTION. RESUMING WITH '
                                                   'THE '
                                                   'NEXT WATERSHED.....')
                print('\n\n')
                continue
